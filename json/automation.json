{
  "automation": {
    "postLoadActionList": [
      ["DEFINE", "$LOADED_PLAYER_DECK", false],
      ["DEFINE", "$LOADED_SCENARIO_DECK", false],
      ["COND",
        ["NOT", ["DEFINED", "$FIRST_STAGE"]],
        ["COND",
          ["EQUAL", "$GAME.mode", "standard"],
          [
            ["DEFINE", "$FIRST_STAGE", "I"],
            ["DEFINE", "$DISCARDED_STAGE", "III"],
            ["DEFINE", "$DOUBLE_SIDED_STAGE", "A1"],
            ["DEFINE", "$DOUBLE_SIDED_DISCARDED_STAGE", "B1"]
          ],
          ["EQUAL", "$GAME.mode", "expert"],
          [
            ["DEFINE", "$FIRST_STAGE", "II"],
            ["DEFINE", "$DISCARDED_STAGE", "I"],
            ["DEFINE", "$DOUBLE_SIDED_STAGE", "B1"],
            ["DEFINE", "$DOUBLE_SIDED_DISCARDED_STAGE", "A1"]
          ]
        ]
      ],
      ["FOR_EACH_VAL", "$CARD_ID", "$GAME.loadedCardIds", [
        ["DEFINE", "$CARD", "$GAME.cardById.$CARD_ID"],
        ["COND",
          ["EQUAL", "$CARD.sides.A.type", "Alter-Ego"],
          [
            ["SET", "/cardById/$CARD_ID/currentSide", "A"],
            ["DEFINE", "$LOADED_PLAYER_DECK", true],
            ["DEFINE", "$IDENTITY_CARD", "$CARD"],
            ["DEFINE", "$HERO_SIDE", "B"]
          ],
          ["EQUAL", "$CARD.sides.B.type", "Alter-Ego"],
          [
            ["SET", "/cardById/$CARD_ID/currentSide", "B"],
            ["DEFINE", "$LOADED_PLAYER_DECK", true],
            ["DEFINE", "$IDENTITY_CARD", "$CARD"],
            ["DEFINE", "$HERO_SIDE", "A"]
          ]
        ],
        ["COND",
          ["OR",
            ["AND",
              "$CARD.sides.A.permanent",
              ["EQUAL", "$CARD.deckGroupId", "{{$PLAYER_N}}Deck"]
            ],
            ["EQUAL", "$CARD.sides.A.databaseId", "9a11225a-84cd-5f63-9a38-45f0c5f95db1"]
          ],
          ["MOVE_CARD", "$CARD.id", ["JOIN_STRING", "$PLAYER_N", "Play1"], -1]],
        ["COND",
          ["EQUAL", "$CARD.sides.A.type", "Villain"],
          [
            ["DEFINE", "$LOADED_SCENARIO_DECK", true],
            ["COND",
              ["OR",
                ["EQUAL", "$CARD.sides.A.stage", "$FIRST_STAGE"],
                ["EQUAL", "$CARD.sides.A.stage", "$DOUBLE_SIDED_STAGE"],
                ["EQUAL", "$CARD.sides.A.stage", "A"]
              ],
              ["COND",
                ["EQUAL",
                  ["LENGTH",
                    ["FILTER_CARDS",
                      "$CARD",
                      ["AND",
                        ["EQUAL", "$CARD.sides.A.type", "Villain"],
                        ["EQUAL", "$CARD.groupId", "sharedVillain"]
                      ]
                    ]
                  ],
                  0
                ],
                ["MOVE_CARD", "$CARD_ID", "sharedVillain", 0]
              ]
            ],
            ["COND",
              ["OR",
                ["EQUAL", "$CARD.sides.A.stage", "$DISCARDED_STAGE"],
                ["EQUAL", "$CARD.sides.A.stage", "$DOUBLE_SIDED_DISCARDED_STAGE"]
              ],
              ["MOVE_CARD", "$CARD_ID", "sharedVillainDiscard", 0]
            ]
          ]
        ],
        ["COND",
          ["AND",
            ["EQUAL", "$CARD.sides.A.type", "Main Scheme"],
            ["EQUAL", "$CARD.sides.A.stage", "1A"]
          ],
          [
            ["DEFINE", "$LOADED_SCENARIO_DECK", true],
            ["DEFINE", "$SCHEME_CARD", "$CARD"]
          ]
        ],
        ["COND",
          ["EQUAL", "$CARD.databaseId", "602e603f-7e92-57f6-9b9f-7b7f8a18de9b"],
          ["DEFINE", "$IRONHEART", true]
        ],
        ["COND",
          ["OR",
            ["EQUAL", "$CARD.databaseId", "0006bfd8-06a5-5928-8d17-1b4971407dbc"],
            ["EQUAL", "$CARD.databaseId", "23858611-0f2c-5e28-8aae-cc9258600557"]
          ],
          ["DEFINE", "$IRONHEART_UPGRADES", true]
        ],
        ["COND",
          ["EQUAL", "$CARD.databaseId", "94028a84-59b8-52ca-bdb0-5228cbd23318"],
          [
            ["LOG", "SPDR Detected"],
            ["DEFINE", "$SPDR", true],
            ["SET", "/cardById/$CARD_ID/currentSide", "B"]
          ]
        ],
        ["COND",
          ["EQUAL", "$CARD.databaseId", "36943f94-3731-5bed-9b56-59fbdd69f968"],
          [
            ["LOG", "Peni Detected"],
            ["DEFINE", "$SPDR_PENI", true]
          ]
        ]
      ]],
      ["DEFINE", "$PLAYER_N_HAND_GROUP_ID", ["JOIN_STRING", "$PLAYER_N", "Hand"]],
      ["DEFINE", "$PLAYER_N_NEMESIS_SET_GROUP_ID", ["JOIN_STRING", "$PLAYER_N", "NemesisSet"]],
      ["COND",
        ["AND",
          ["DEFINED", "$SPDR"],
          ["NOT", ["DEFINED", "$SPDR_PENI"]]
        ],
        [
          ["LOG", "LOADING Peni Parker"],
          ["LOAD_CARDS", "SP//dr (Peni Parker)"]
        ]
      ],
      ["COND",
        ["AND", "$LOADED_PLAYER_DECK", ["EQUAL", "$GAME.roundNumber", 0]],
        [
          ["COND",
            ["EQUAL", ["LENGTH", "$GAME.groupById.$PLAYER_N_HAND_GROUP_ID.stackIds"], 0],
            [
              ["DEFINE", "$PLAYER", "$PLAYER_N"],
              ["ACTION_LIST", "drawHand"]
            ]
          ],
          ["COND",
            ["EQUAL", "$GAME.playerData.$PLAYER_N.hitPoints", 0],
            [
              ["SET", "/playerData/$PLAYER_N/hitPoints", "$IDENTITY_CARD.currentFace.hitPointsFixed"],
              ["LOG", "$ALIAS_N", " sets their hit points to ", "$GAME.playerData.$PLAYER_N.hitPoints", "."]
            ]
          ],
          ["COND",
            ["EQUAL", ["LENGTH", "$GAME.groupById.$PLAYER_N_NEMESIS_SET_GROUP_ID.stackIds"], 0],
            [
              ["DEFINE", "$BUNDLE", ["JOIN_STRING", "$IDENTITY_CARD.sides.$HERO_SIDE.name", " (marvelcdb bundle)"]],
              ["LOAD_CARDS", "$BUNDLE"]
            ]
          ],
          ["COND",
            ["EQUAL", "$IDENTITY_CARD.databaseId", "1a09dcb7-083f-5781-87c0-7b0d723cd232"],
            ["LOAD_CARDS", "Invocation"]
          ],
          ["COND",
            ["AND",
              ["DEFINED", "$IRONHEART"],
              ["NOT", ["DEFINED", "$IRONHEART_UPGRADES"]]
            ],
            ["LOAD_CARDS", "Ironheart (Version Upgrades)"]
          ],
          ["COND",
            ["GREATER_THAN", ["LENGTH", "$GAME.groupById.{{$PLAYER_N}}Deck2.stackIds"], 0],
            ["SET", "/layoutVariants/playerDeck2", true]
          ],
          ["COND",
            ["EQUAL", "$IDENTITY_CARD.databaseId", "c3a410de-2939-5255-9ea1-cdb9e71f07d7"],
            [
              ["SET", "/cardById/$IDENTITY_CARD.id/sides/C/height", 1],
              ["SET", "/cardById/$IDENTITY_CARD.id/sides/C/width", 1.39]
            ]
          ]
        ]
      ],
      ["COND", "$LOADED_SCENARIO_DECK",
        [
          ["FOR_EACH_VAL", "$CARD_ID", "$GAME.groupById.sharedVillain.parentCardIds", [
            ["DEFINE", "$CARD", "$GAME.cardById.$CARD_ID"],
            ["COND",
              ["EQUAL", "$CARD.sides.A.type", "Villain"],
              [
                ["DEFINE", "$VILLAIN_CARD_ID", "$CARD_ID"],
                ["DEFINE", "$VILLAIN_CARD", "$CARD"]
              ]
            ]
          ]],
          ["COND",
            ["DEFINED", "$VILLAIN_CARD"],
            [
              ["COND",
                ["AND",
                  ["EQUAL", "$VILLAIN_CARD.sides.A.stage", "A"],
                  ["EQUAL", "$GAME.mode", "expert"]
                ],
                ["SET", "/cardById/$VILLAIN_CARD.id/currentSide", "B"]
              ],
              ["ACTION_LIST", "setVillainHealth"]
            ]
          ],
          ["COND",
            ["DEFINED", "$SCHEME_CARD"],
            ["ACTION_LIST", "setSchemeStartingThreat"]
          ]
        ]
      ]
    ],
    "gameRules": [
      {
        "_comment": "When a card enters play or flips, if it has a hand size, set the player's hand size to that value.",
        "type": "trigger",
        "listenTo": ["/cardById/*/inPlay", "/cardById/*/currentSide"],
        "condition": ["AND", "$TARGET.inPlay", ["NOT_EQUAL", "$TARGET.currentFace.handSize", null]],
        "then": [
          ["DEFINE", "$CONTROLLER", "$TARGET.controller"],
          ["SET", "/playerData/$CONTROLLER/handSize", "$TARGET.currentFace.handSize"],
          ["LOG", "$ALIAS_N", " set their hand size to ", "$TARGET.currentFace.handSize", "."]
        ]
      },
      {
        "_comment": "When a side scheme enters play set starting threat",
        "type": "trigger",
        "listenTo": ["/cardById/*/inPlay"],
        "condition": ["AND",
          "$TARGET.inPlay",
          ["OR",
            ["EQUAL", "$TARGET.sides.A.type", "Side Scheme"],
            ["EQUAL", "$TARGET.sides.A.type", "Player Side Scheme"]
          ],
          ["EQUAL", "$TARGET.currentSide", "A"],
          ["EQUAL", "$TARGET.boost", false]
        ],
        "then": [
          ["DEFINE", "$SCHEME_CARD", "$TARGET"],
          ["ACTION_LIST", "setSchemeStartingThreat"]
        ]
      },
      {
        "_comment": "When a player deck empties, give them an encounter deck and shuffle the deck.",
        "type": "trigger",
        "listenTo": ["/groupById/*/stackIds"],
        "condition": ["AND",
          ["EQUAL", "$TARGET_ID", "{{$PLAYER_N}}Deck"],
          ["EQUAL", ["LENGTH", "$TARGET.stackIds"], 0],
          ["GREATER_THAN", ["LENGTH", "$GAME.groupById.{{$PLAYER_N}}Discard.stackIds"], 0]
        ],
        "then": [
          ["DEFINE", "$DECK_GROUP_ID", ["JOIN_STRING", "$PLAYER_N", "Deck"]],
          ["ACTION_LIST", "dealEncounterFacedown"],
          ["MOVE_STACKS", ["JOIN_STRING", "$PLAYER_N", "Discard"], "$DECK_GROUP_ID"],
          ["SHUFFLE_GROUP", "$DECK_GROUP_ID"],
          ["LOG", "$ALIAS_N", " emptied their deck."]
        ]
      },
      {
        "_comment": "When the encounter deck empties, add an acceleration token and shuffle the deck.",
        "type": "trigger",
        "listenTo": ["/groupById/*/stackIds"],
        "condition": ["AND",
          ["EQUAL", "$TARGET_ID", "sharedEncounterDeck"],
          ["EQUAL", ["LENGTH", "$TARGET.stackIds"], 0],
          ["GREATER_THAN", ["LENGTH", "$GAME.groupById.sharedEncounterDiscard.stackIds"], 0]
        ],
        "then": [
          ["LOG", "Encounter Deck has been emptied."],
          ["MOVE_STACKS", "sharedEncounterDiscard", "sharedEncounterDeck"],
          ["LOG", "Encounter Deck has been reshuffled."],
          ["DEFINE", "$SCHEME_CARD_ID", ["GET_CARD_ID", "sharedMainScheme", 0, 0]],
          ["INCREASE_VAL", "/cardById/$SCHEME_CARD_ID/tokens/acceleration", 1]
        ]
      },
      {
        "_comment": "When the second encounter deck empties, shuffle the deck.",
        "type": "trigger",
        "listenTo": ["/groupById/*/stackIds"],
        "condition": ["AND",
          ["EQUAL", "$TARGET_ID", "sharedEncounter2Deck"],
          ["EQUAL", ["LENGTH", "$TARGET.stackIds"], 0],
          ["GREATER_THAN", ["LENGTH", "$GAME.groupById.sharedEncounter2Discard.stackIds"], 0]
        ],
        "then": [
          ["LOG", "Second Encounter Deck has been emptied."],
          ["MOVE_STACKS", "sharedEncounter2Discard", "sharedEncounter2Deck"],
          ["LOG", "Second Encounter Deck has been reshuffled."]
        ]
      },
      {
        "_comment": "Remove all tokens when a card leaves play",
        "type": "trigger",
        "listenTo": ["/cardById/*/inPlay"],
        "condition": ["NOT", "$TARGET.inPlay"],
        "then": [
          ["SET", "/cardById/$TARGET_ID/tokens", {}]
        ]
      }
    ],
    "cards": {

    }
  }
}
