{
  "actionLists": {
    "drawCard": [
      "DRAW_CARD"
    ],
    "drawHand": [
      ["DEFINE", "$HAND_GROUP_ID", ["JOIN_STRING", "$PLAYER_N", "Hand"]],
      ["DEFINE", "$HAND_SIZE", "$GAME.playerData.$PLAYER_N.handSize"],
      ["DEFINE", "$REMAINING_CARDS", ["LENGTH", "$GAME.groupById.$HAND_GROUP_ID.stackIds"]],
      ["DEFINE", "$DRAW_SIZE", ["SUBTRACT", "$HAND_SIZE", "$REMAINING_CARDS"]],
      ["LOG", "$ALIAS_N", " draws ", "$DRAW_SIZE", " cards."],
      ["DRAW_CARD", "$DRAW_SIZE"],
      ["DEFINE", "$DRAW_SIZE", ["SUBTRACT", "$HAND_SIZE", ["LENGTH", "$GAME.groupById.$HAND_GROUP_ID.stackIds"]]],
      ["COND",
        ["GREATER_THAN", "$DRAW_SIZE", 0],
        ["DRAW_CARD", "$DRAW_SIZE"]
      ]
    ],
    "toggleExhaust": [
      ["COND",
        ["AND", ["EQUAL", "$ACTIVE_CARD.rotation", 90], "$ACTIVE_CARD.inPlay"],
        [
          ["SET", "/cardById/$ACTIVE_CARD_ID/rotation", 0],
          ["SET", "/cardById/$ACTIVE_CARD_ID/exhausted", false],
          ["LOG", "$ALIAS_N", " readied ", "$ACTIVE_FACE.name", "."]
        ],
        ["AND", ["EQUAL", "$ACTIVE_CARD.rotation", 0], "$ACTIVE_CARD.inPlay"],
        [
          ["SET", "/cardById/$ACTIVE_CARD_ID/rotation", 90],
          ["SET", "/cardById/$ACTIVE_CARD_ID/exhausted", true],
          ["LOG", "$ALIAS_N", " exhausted ", "$ACTIVE_FACE.name", "."]
        ]
      ]
    ],
    "setSchemeStartingThreat": [
      ["DEFINE", "$STARTING_THREAT", 0],
      ["COND",
        ["EQUAL", "$SCHEME_CARD.sides.A.type", "Main Scheme"],
        ["DEFINE", "$SCHEME_FACE", "B"],
        true,
        ["DEFINE", "$SCHEME_FACE", "A"]
      ],
      ["COND",
        ["NOT_EQUAL", "$SCHEME_CARD.sides.$SCHEME_FACE.startingThreatFixed", null],
        ["DEFINE", "$STARTING_THREAT", ["ADD", "$STARTING_THREAT", "$SCHEME_CARD.sides.$SCHEME_FACE.startingThreatFixed"]]
      ],
      ["COND",
        ["NOT_EQUAL", "$SCHEME_CARD.sides.$SCHEME_FACE.startingThreatScaling", null],
        ["DEFINE", "$STARTING_THREAT", ["ADD", "$STARTING_THREAT", ["MULTIPLY", "$SCHEME_CARD.sides.$SCHEME_FACE.startingThreatScaling", "$GAME.numPlayers"]]]
      ],
      [
        ["DEFINE", "$SCHEME_CARD_ID", "$SCHEME_CARD.id"],
        ["SET", "/cardById/$SCHEME_CARD_ID/tokens/threat", "$STARTING_THREAT"],
        ["LOG", "Setting starting threat for ", "$SCHEME_CARD.sides.$SCHEME_FACE.name", " to ", "$STARTING_THREAT"]
      ]
    ],
    "setVillainHealth": [
      ["DEFINE", "$VILLAIN_HIT_POINTS", -1],
      ["COND",
        ["NOT_EQUAL", "$VILLAIN_CARD.sides.A.hitPointsFixed", null],
        ["DEFINE", "$VILLAIN_HIT_POINTS", "$VILLAIN_CARD.sides.A.hitPointsFixed"],
        ["NOT_EQUAL", "$VILLAIN_CARD.sides.A.hitPointsScaling", null],
        ["DEFINE", "$VILLAIN_HIT_POINTS", ["MULTIPLY", "$VILLAIN_CARD.sides.A.hitPointsScaling", "$GAME.numPlayers"]]
      ],
      ["SET", "/villainHitPoints", "$VILLAIN_HIT_POINTS"],
      ["LOG", "Set villain hit points to ", "$VILLAIN_HIT_POINTS", "."]
    ],
    "discardCard": [
      ["COND",
        ["EQUAL", "$ACTIVE_CARD.discardGroupId", null],
        ["LOG", "$ALIAS_N", " failed to discard ", "$ACTIVE_FACE.name", " because it is not associated with a discard pile. Please drag the card instead."],
        true,
        [
          ["LOG", "$ALIAS_N", " discarded ", "$ACTIVE_FACE.name", "."],
          ["SET", "/cardById/$ACTIVE_CARD_ID/rotation", 0],
          ["MOVE_CARD", "$ACTIVE_CARD_ID", "$ACTIVE_CARD.discardGroupId", 0],
          ["COND",
            ["AND",
              ["EQUAL", "$ACTIVE_CARD.sides.A.type", "Villain"],
              ["GREATER_THAN", ["LENGTH", "$GAME.groupById.sharedVillainDeck.stackIds"], 0]
            ],
            [
              ["DEFINE", "$STACK_ID", "$GAME.groupById.sharedVillainDeck.stackIds.[0]"],
              ["DEFINE", "$CARD_ID", "$GAME.stackById.$STACK_ID.cardIds.[0]"],
              ["MOVE_CARD", "$CARD_ID", "sharedVillain", 0],
              ["DEFINE", "$VILLAIN_CARD", "$GAME.cardById.$CARD_ID"],
              ["ACTION_LIST", "setVillainHealth"]
            ]
          ],
          ["COND",
            ["AND",
              ["EQUAL", "$ACTIVE_CARD.sides.A.type", "Main Scheme"],
              ["GREATER_THAN", ["LENGTH", "$GAME.groupById.sharedMainSchemeDeck.stackIds"], 0]
            ],
            [
              ["DEFINE", "$STACK_ID", "$GAME.groupById.sharedMainSchemeDeck.stackIds.[0]"],
              ["DEFINE", "$CARD_ID", "$GAME.stackById.$STACK_ID.cardIds.[0]"],
              ["MOVE_CARD", "$CARD_ID", "sharedMainScheme", 0],
              ["DEFINE", "$SCHEME_CARD", "$GAME.cardById.$CARD_ID"],
              ["ACTION_LIST", "setSchemeStartingThreat"]
            ]
          ]
        ]
      ]
    ],
    "discardRandomCard": [
      ["DEFINE", "$HAND_GROUP_ID", ["JOIN_STRING", "$PLAYER_N", "Hand"]],
      ["DEFINE", "$CURRENT_HAND_SIZE", ["LENGTH", "$GAME.groupById.$HAND_GROUP_ID.stackIds"]],
      ["DEFINE", "$INDEX", ["RANDOM_INT", 0, ["SUBTRACT", "$CURRENT_HAND_SIZE", 1]]],
      ["DEFINE", "$STACK_ID", "$GAME.groupById.$HAND_GROUP_ID.stackIds.[$INDEX]"],
      ["FOR_EACH_VAL", "$CARD_ID", "$GAME.stackById.$STACK_ID.cardIds",
        ["ACTION_LIST", "discardCard", "$CARD_ID"]
      ]
    ],
    "flipCard": [
      ["COND",
        ["EQUAL", "$ACTIVE_CARD.currentSide", "A"],
        [
          ["LOG", "$ALIAS_N", " flipped ", "$ACTIVE_FACE.name", " facedown."],
          ["SET", "/cardById/$ACTIVE_CARD_ID/currentSide", "B"]
        ],
        true,
        [
          ["SET", "/cardById/$ACTIVE_CARD_ID/currentSide", "A"],
          ["LOG", "$ALIAS_N", " flipped ", "$ACTIVE_FACE.name", " faceup."]
        ]
      ]
    ],
    "setSide": [
      ["LOG", "$ALIAS_N", " set ", "$ACTIVE_FACE.name", "to side ", "$SIDE", "."],
      ["SET", "/cardById/$ACTIVE_CARD_ID/currentSide", "$SIDE"]
    ],
    "setSideA": [
      ["DEFINE", "$SIDE", "A"],
      ["ACTION_LIST", "setSide"]
    ],
    "setSideB": [
      ["DEFINE", "$SIDE", "B"],
      ["ACTION_LIST", "setSide"]
    ],
    "setSideC": [
      ["DEFINE", "$SIDE", "C"],
      ["ACTION_LIST", "setSide"]
    ],
    "shuffleIntoDeck": [
      ["MOVE_CARD", "$ACTIVE_CARD_ID", "$ACTIVE_CARD.deckGroupId", 0],
      ["DEFINE", "$GROUP_ID", "$ACTIVE_CARD.deckGroupId"],
      ["SHUFFLE_GROUP", "$GROUP_ID"],
      ["LOG", "$ALIAS_N", " shuffled ", "$ACTIVE_FACE.name", " into ", "$GAME.groupById.$GROUP_ID.label", "."]
    ],
    "zeroTokens": [
      ["SET", "/cardById/$ACTIVE_CARD_ID/tokens", {}],
      ["LOG", "$ALIAS_N", " removed all tokens from ", "$ACTIVE_FACE.name", "."]
    ],
    "revealEncounterFaceup": [
      ["DEFINE", "$REVEAL_FACEDOWN", false],
      ["ACTION_LIST", "revealEncounter"]
    ],
    "revealEncounterFacedown": [
      ["DEFINE", "$REVEAL_FACEDOWN", true],
      ["ACTION_LIST", "revealEncounter"]
    ],
    "revealSecondaryFaceup": [
      ["DEFINE", "$REVEAL_FACEDOWN", false],
      ["ACTION_LIST", "revealSecondary"]
    ],
    "revealSecondaryFacedown": [
      ["DEFINE", "$REVEAL_FACEDOWN", true],
      ["ACTION_LIST", "revealSecondary"]
    ],
    "drawBoost": [
      ["COND",
        ["EQUAL", ["LENGTH", "$GAME.groupById.sharedEncounterDeck.stackIds"], 0],
        [
          ["MOVE_STACKS", "sharedEncounterDiscard", "sharedEncounterDeck", ["LENGTH", "$GAME.groupById.sharedEncounterDiscard.stackIds"], "shuffle"],
          ["LOG", "$ALIAS_N"," shuffled the encounter discard pile into the encounter deck."]
        ]
      ],
      ["DEFINE", "$CARD_ID", "$GAME.groupById.sharedEncounterDeck.parentCardIds.[0]"],
      ["SET", "/cardById/$CARD_ID/boost", true],
      ["MOVE_CARD", "$CARD_ID", ["JOIN_STRING", "$PLAYER_N", "Engaged"], -1],
      ["SET", "/cardById/$CARD_ID/rotation", -30],
      ["SET", "/cardById/$CARD_ID/currentSide", "B"],
      ["SET", "/cardById/$CARD_ID/boost", false],
      ["LOG", "$ALIAS_N", " drew a boost card."]
    ],
    "straighten": [
      ["SET", "/cardById/$ACTIVE_CARD_ID/rotation", 0]
    ],
    "revealEncounter": [
      ["COND",
        ["EQUAL", ["LENGTH", "$GAME.groupById.sharedEncounterDeck.stackIds"], 0],
        [
          ["MOVE_STACKS", "sharedEncounterDiscard", "sharedEncounterDeck", ["LENGTH", "$GAME.groupById.sharedEncounterDiscard.stackIds"], "shuffle"],
          ["LOG", "$ALIAS_N"," shuffled the encounter discard pile into the encounter deck."]
        ]
      ],
      ["DEFINE", "$CARD_ID", ["GET_CARD_ID", "sharedEncounterDeck", 0, 0]],
      ["MOVE_CARD", "$CARD_ID", ["JOIN_STRING", "$PLAYER_N", "Engaged"], -1, 0],
      ["COND",
        "$REVEAL_FACEDOWN",
        ["SET", "/cardById/$CARD_ID/currentSide", "B"]
      ],
      ["LOG", "$ALIAS_N", " dealt an encounter card."]
    ],
    "revealSecondary": [
      ["COND",
        ["EQUAL", ["LENGTH", "$GAME.groupById.sharedEncounterDeck2.stackIds"], 0],
        ["LOG", "$ALIAS_N", " tried to reveal a card from the second encounter deck, but it's empty."],
        true,
        [
          ["DEFINE", "$STACK_ID", ["AT_INDEX", "$GAME.groupById.sharedEncounter1Deck.stackIds", 0]],
          ["MOVE_STACK", "$STACK_ID", ["JOIN_STRING", "$PLAYER_N", "Engaged"], -1],
          ["COND",
            "$REVEAL_FACEDOWN",
            ["FOR_EACH_VAL", "$CARD_ID", "$GAME.stackById.$STACK_ID.cardIds",
              ["SET", "/cardById/$CARD_ID/currentSide", "B"]
            ]
          ],
          ["LOG", "$ALIAS_N", " revealed ", ["FACEUP_NAME_FROM_STACK_ID", "$STACK_ID"], "."]
        ]
      ]
    ],
    "mulligan": [
      ["CONFIRM", "Mulligan?"],
      ["DEFINE", "$PLAYER", "$PLAYER_N"],
      ["ACTION_LIST", "drawHand"],
      ["LOG", "$ALIAS_N", " mulliganed."]
    ],
    "readyAll": [
      ["LOG", "$ALIAS_N", " readied all their cards."],
      ["FOR_EACH_KEY_VAL", "$CARD_ID", "$CARD", "$GAME.cardById",
        ["COND", 
          ["EQUAL", "$CARD.controller", "$PLAYER_N"],
          [
            ["SET", "/cardById/$CARD_ID/exhausted", false],
            ["SET", "/cardById/$CARD_ID/rotation", 0]
          ]
        ]
      ]
    ],
    "shadowsOfThePast": [
      ["DEFINE", "$GROUP_ID", ["JOIN_STRING", "$PLAYER_N", "NemesisSet"]],
      ["FOR_EACH_VAL", "$CARD_ID", "$GAME.groupById.$GROUP_ID.parentCardIds", [
        ["DEFINE", "$CARD", "$GAME.cardById.$CARD_ID"],
        ["COND",
          "$CARD.sides.A.nemesisMinion",
          ["MOVE_CARD", "$CARD_ID", ["JOIN_STRING", "$PLAYER_N", "Engaged"], 0],
          ["EQUAL", "$CARD.sides.A.type", "Side Scheme"],
          ["MOVE_CARD", "$CARD_ID", "sharedSideSchemes", 0],
          true,
          ["MOVE_CARD", "$CARD_ID", "sharedEncounterDeck", 0]
        ]
      ]]
    ],
    "playerEndPhase": [
      ["LOG", "Player Phase - Ends"],
      ["FOR_EACH_VAL", "$PLAYER_N", "$PLAYER_ORDER", [
        ["ACTION_LIST", "readyAll"],
        ["ACTION_LIST", "drawHand"]
      ]],
      ["DEFINE", "$MAIN_SCHEME_CARD_ID", "$GAME.groupById.sharedMainScheme.parentCardIds.[0]]"],
      ["DEFINE", "$MAIN_SCHEME_CARD", "$GAME.cardById.$MAIN_SCHEME_CARD_ID"],
      ["DEFINE", "$THREAT_INCREASE", ["ADD", "$MAIN_SCHEME_CARD.tokens.acceleration", "$GAME.numPlayers"]],
      ["INCREASE_VAL", "/cardById/$MAIN_SCHEME_CARD_ID/tokens/threat", "$THREAT_INCREASE"],
      ["LOG", "Villain Phase - Begins"],
      ["LOG", "Villain Phase - Acceleration: Place ", "$THREAT_INCREASE", " on " ,"$MAIN_SCHEME_CARD.sides.B.name", "."],
      ["SET", "/stepId", "2.1"]
    ],
    "villainEncounterPhase": [
      ["LOG", "Villain Phase - Encounter"],
      ["SET", "/stepId", "2.3"],
      ["FOR_EACH_VAL", "$PLAYER_N", "$PLAYER_ORDER", ["ACTION_LIST", "revealEncounterFacedown"]]
    ],
    "villainEndPhase": [
      ["LOG", "Villain Phase - Ends"],
      ["SET", "/firstPlayer", ["NEXT_PLAYER", "$GAME.firstPlayer"]],
      ["SET", "/stepId", "1.1"],
      ["INCREASE_VAL", "/roundNumber", 1],
      ["LOG", "Player Phase - Begins"]
    ],
    "setMode": [
      ["SET", "/mode", "$MODE"],
      ["LOG", "Mode is set to ", "$MODE"]
    ],
    "setStandardMode": [
      ["DEFINE", "$MODE", "standard"],
      ["ACTION_LIST", "setMode"]
    ],
    "setExpertMode": [
      ["DEFINE", "$MODE", "expert"],
      ["ACTION_LIST", "setMode"]
    ],
    "toggleTableButton": [
      ["COND",
        ["AND",
          ["EQUAL", "$GAME.layoutVariants.sideGroupVisible", true],
          ["EQUAL", "$GAME.layoutVariants.sideGroupId", "$SIDE_GROUP_ID"]
        ],
        [
          ["SET", "/layoutVariants/sideGroupVisible", false],
          ["SET", "/layoutVariants/sideGroupId", ""]
        ],
        true,
        [
          ["SET", "/layoutVariants/sideGroupVisible", true],
          ["SET", "/layoutVariants/sideGroupId", "$SIDE_GROUP_ID"]
        ]
      ]
    ]
  }
}
